openapi: 3.0.3
info:
  title: Dokumen API Cloud Function - OpenAPI 3.0
  description: >-
    Dokumentasi API untuk Aplikasi dari Cloud function
  termsOfService: https://github.com/Rumahkopi/swagger
  contact:
    email: masyahida4@gmail.com
  license:
    name: Backend Package
    url: https://pkg.go.dev/github.com/Rumahkopi/rkbackend
  version: 1.0.11
externalDocs:
  description: Website
  url: https://rumahkopi.github.io/
servers:
  - url: https://asia-southeast2-msyahid.cloudfunctions.net
tags:
  - name: auth
    description: Authentikasi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/Rumahkopi/rkbackend
  - name: Produk
    description: Pengelolaan Data Produk
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/Rumahkopi/rkbackend
  - name: Transaksi
    description: Pengelolaan Data Transaksi
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/Rumahkopi/rkbackend
  - name: Review
    description: Pengelolaan Data Review Produk Dari Customer
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/Rumahkopi/rkbackend
  - name: Keluhan
    description: Pengelolaan Data Keluhan
    externalDocs:
      description: Deskripsi dan Kode Program
      url: https://github.com/Rumahkopi/rkbackend
paths:
  /LoginAdmin:
    post:
      tags:
        - auth
      summary: Login get Token
      description: Login and Get Admin Token
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '405':
          description: Invalid input
  /InsertDataProduk:
    post:
      tags:
        - Produk
      summary: Insert Produk
      description: Insert Data Produk 
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produk'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input          
      security:
        - Token:
          - write:apiKey
          - read:apiKey
  /GetDataProduk:
    get:
      tags:
        - Produk
      summary: Get Data Produk
      description: Get Semua Data Produk
      operationId: GetdataProduk
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseData'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey
  /UpdateDataProduk:
    put:
      tags:
        - Produk
      summary: Update Produk
      description: Update Produk
      operationId: updateProduk
      parameters:
        - name: _id
          in: query
          description: 'Masukkan ID Produk yang ingin di update.'
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Produk'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdukResponse'
        '405':
          description: Invalid input
      security:
        - Token:
            - write: apiKey
            - read: apiKey
  /DeleteDataProduk:
    delete:
      tags:
        - Produk
      summary: Delete Produk
      description: Delete Produk
      operationId: deleteProduk
      parameters:
        - name: _id
          in: query
          description: 'Masukkan ID Produk yang ingin di Delete.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProdukResponse'
        '405':
          description: Invalid input
      security:
        - Token:
            - write: apiKey
            - read: apiKey
  /GetOneProduk:
    get:
      tags:
        - Produk
      summary: Get Data Produk
      description: Get Data Produk By Id
      operationId: GetOneProduk
      parameters:
        - name: _id
          in: query
          description: 'Masukkan ID Produk yang ingin di Ambil Datanya.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/responseData'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey

  /InsertPesanReview:
    post:
      tags:
        - Review
      summary: Insert Pesan Review
      description: Insert Data Review Produk 
      operationId: authService
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaksi'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '405':
          description: Invalid input          
      security:
        - Token:
          - write:apiKey
          - read:apiKey
          
  /GetDataReview:
    get:
      tags:
        - Review
      summary: Get Data Review
      description: Get Semua Data Review Produk
      operationId: GetdataReview
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey

  /GetDataTransaksi:
    get:
      tags:
        - Transaksi
      summary: Get Data Transaksi
      description: Get Semua Data Transaksi
      operationId: GetdataTransaksi
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaksi'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey

  /GetDataKeluhan:
    get:
      tags:
        - Keluhan
      summary: Get Data Keluhan
      description: Get Semua Data Keluhan dari customer
      operationId: GetdataKeluhan
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Keluhan'
        '400':
          description: Invalid status value
      security:
        - Token:
          - write:apiKey
          - read:apiKey

components:
  schemas:
    Response:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: Berhasil Input data dengan ID 
    Auth:
      type: object
      properties:
        username:
          type: string
          example: admin
        password:
          type: string
          example: adminkopi
    AuthResponse:
      type: object
      properties:
        status:
          type: bool
          example: false
        message:
          type: string
          example: Selamat Datang
        token:
          type: string
          example: anjasss
    Produk:
      type: object
      properties:
        nama:
          type: string
          example : Kopi Aren
        harga:
          type: string
          example: Rp 12.000
        deskripsi:
          type: string
          example: Kopi Nikmat 
        stok:
          type: string
          example: 123
    Review:
      type: object
      properties:
        nama:
          type: string
          example : string
        subjek:
          type: string
          example: string
        pesan:
          type: string
          example: string
    Keluhan:
      type: object
      properties:
        complaint_number:
          type: int
          example : int
        user_phone:
          type: string
          example: string 
        formatedtime:
          type: string
          example: string
        content:
          type: string
          example: string

    Transaksi:
      type: object
      properties:
        transaksi_number:
          type: int
          example : int
        user_phone:
          type: string
          example: string 
        formatted_time:
          type: string
          example: string
        buktitf:
          type: string
          example: string
    responseData:
      type: object
      properties:
        nama:
          type: string
          example: string
        harga:
          type: string
          example: string
        deskripsi:
          type: string
          example: String
        stok:
          type: string
          example: String
        image:
          type: string
          example: String
    ProdukResponse:
      type: object
      properties:
        status:
          type: bool
          example: true
        message:
          type: string
          example: uhuyyy
  requestBodies:
    AuthReq:
      description: Request Authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Auth'
    AdminArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AuthResponse'
  securitySchemes:
    Token:
      type: apiKey
      name: Token
      in: header

      